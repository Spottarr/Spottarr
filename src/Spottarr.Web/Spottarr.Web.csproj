<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <!--
    ASP.NET uses server GC by default.
    Server GC assumes the application is the main resource user on a machine, but Resources in docker are usually shared and constrained.
    In addition Spottarr uses most resourced for imports and indexing, not for high throughput web requests.
    Workstation GC is a better fit.
    -->
    <ServerGarbageCollection>false</ServerGarbageCollection>
  </PropertyGroup>

  <PropertyGroup>
    <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>
    <PublishSingleFile>true</PublishSingleFile>
    <SelfContained>true</SelfContained>
    <IncludeNativeLibrariesForSelfExtract>true</IncludeNativeLibrariesForSelfExtract>
    <IncludeAllContentForSelfExtract>true</IncludeAllContentForSelfExtract>
    <EnableCompressionInSingleFile>true</EnableCompressionInSingleFile>
    <GenerateEmbeddedFilesManifest>true</GenerateEmbeddedFilesManifest>
    <StaticWebAssetsEnabled>false</StaticWebAssetsEnabled>
    <PublishTrimmed>true</PublishTrimmed>
  </PropertyGroup>

  <ItemGroup>
    <!-- Embed all static files in the final executable for easy deployment -->
    <Content Update="wwwroot\**\*" CopyToPublishDirectory="Never"/>
    <EmbeddedResource Include="wwwroot\**" CopyToOutputDirectory="PreserveNewest"/>
  </ItemGroup>

  <ItemGroup>
    <InternalsVisibleTo Include="Spottarr.Tests" />
    <InternalsVisibleTo Include="DynamicProxyGenAssembly2" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.OpenApi" />
    <PackageReference Include="Microsoft.Extensions.FileProviders.Embedded" />
    <PackageReference Include="Scalar.AspNetCore" />
    <PackageReference Include="System.ServiceModel.Syndication" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Spottarr.Data\Spottarr.Data.csproj" />
    <ProjectReference Include="..\Spottarr.Services\Spottarr.Services.csproj" />
  </ItemGroup>

</Project>
